name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: |
        IMAGE_TAG=python-test:$(date +%s)
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
        docker build . --file Dockerfile --tag $IMAGE_TAG
    - name: Run 
      run: docker run -d --name python-test -v ${{ github.workspace }}/allure-results:/allure-results ${{ env.IMAGE_TAG }}
    
    - name: Wait for container to finish
      run: |
        CONTAINER_ID=$(docker ps -q --filter "name=python-test")
        while [ -n "$CONTAINER_ID" ]; do
          sleep 5
          CONTAINER_ID=$(docker ps -q --filter "name=python-test")
        done

    - name: Get logs from the Docker container
      run: docker logs python-test

    - name: Generate Allure Report
      env:
        ALLURE_VERSION: 2.30.0
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-11-jre
        curl -o allure-${ALLURE_VERSION}.tgz -L https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/${ALLURE_VERSION}/allure-commandline-${ALLURE_VERSION}.tgz
        tar -zxvf allure-${ALLURE_VERSION}.tgz
        sudo mv allure-${ALLURE_VERSION} /opt/allure
        sudo ln -s /opt/allure/bin/allure /usr/bin/allure
        allure generate ${{ github.workspace }}/allure-results --clean -o ${{ github.workspace }}/docs
        
    - name: Deploy to GitHub Pages
      if: ${{ github.ref == 'refs/heads/master' }}
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git checkout master
        mkdir -p docs
        cp -r ${{ github.workspace }}/allure-report/* docs/
        git add docs/
        git commit -m "Deploy Allure Report"
        git push origin master
